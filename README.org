* ENEXA utils
** Build
#+begin_src shell :results output silent
make build
#+end_src
That builds ~enexa-utils~ Docker image which is required to build modules.

** Test
*** Parameter retrieval
#+begin_src shell :results output silent
export ENEXA_META_DATA_ENDPOINT=https://dbpedia.org/sparql
export ENEXA_MODULE_INSTANCE_IRI=http://dbpedia.org/resource/Lagomorpha
2>&1 perl -E 'say for @ARGV' -- \
"$(./enexa-parameter http://dbpedia.org/property/name)" \
"$(./enexa-parameter http://dbpedia.org/property/image)"
#+end_src

*** Result submission
#+begin_src shell :results output silent
docker-compose up -d
#+end_src

#+begin_src shell :results output silent
export ENEXA_SHARED_DIRECTORY=./test-shared-dir/
export ENEXA_WRITEABLE_DIRECTORY=./test-shared-dir/"$(date +%s)"/
mkdir -p "$ENEXA_SHARED_DIRECTORY"
mkdir -p "$ENEXA_WRITEABLE_DIRECTORY"
export ENEXA_SERVICE_URL=http://127.0.0.1:36321/
export ENEXA_META_DATA_ENDPOINT=http://admin:admin@127.0.0.1:47238/test
URI=$(./enexa-add-file test-result-file)

echo "PREFIX enexa: <http://w3id.org/dice-research/enexa/ontology#> SELECT ?o { <$URI> enexa:location ?o }" |./sparql-select "http://admin:admin@127.0.0.1:47238/test"
#+end_src

#+begin_src shell :results output silent
docker-compose down
#+end_src

** Usage
*** Docker
In Dockerfile:
#+begin_src
FROM <your_application's_docker_image>
COPY --from=enexa-utils:1 / /.
#+end_src

At runtime:
#+begin_src shell
echo $(enexa-parameter "http://example.org/input-parameter-1")
echo your_result >your_output_file
enexa-add-file your_output_file "http://example.org/output-parameter-2"
#+end_src

** Examples
- [[../enexa-example-module][a simple example module]]
