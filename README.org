* ENEXA utils

[![Codacy Badge](https://app.codacy.com/project/badge/Grade/00682a1624ba4a2e8aa4b735fa3d1792)](https://app.codacy.com/gh/EnexaProject/enexa-utils/dashboard?utm_source=gh&utm_medium=referral&utm_content=&utm_campaign=Badge_grade)

** Build
#+begin_src shell :results output silent
make build
#+end_src
That builds ~enexa-utils~ Docker image which is required to build modules.

** Setup the test environment
#+begin_src shell :results output silent
docker-compose up -d
#+end_src
That would start Fuseki and a dummy ENEXA service.
It is used for testing ~enexa-utils~ and modules.

#+begin_src shell :results output silent
docker-compose down
#+end_src
That would stop them.

To clear the test SPARQL store:
#+begin_src shell :results output silent
echo "DELETE WHERE { ?s ?p ?o }" |./sparql-update "http://localhost:47238/test"
#+end_src

** Test
*** Parameter retrieval
#+begin_src shell :results output silent
export ENEXA_META_DATA_ENDPOINT=https://dbpedia.org/sparql
export ENEXA_MODULE_INSTANCE_IRI=http://dbpedia.org/resource/Lagomorpha
2>&1 perl -E 'say for @ARGV' -- \
"$(./enexa-parameter http://dbpedia.org/property/name)" \
"$(./enexa-parameter http://dbpedia.org/property/image)"
#+end_src

*** Result submission
#+begin_src shell :results output silent
docker-compose up -d
#+end_src

#+begin_src shell :results output silent
export ENEXA_SHARED_DIRECTORY=./test-shared-dir/
export ENEXA_WRITEABLE_DIRECTORY=./test-shared-dir/"$(date +%s)"/
mkdir -p "$ENEXA_SHARED_DIRECTORY"
mkdir -p "$ENEXA_WRITEABLE_DIRECTORY"
export ENEXA_SERVICE_URL=http://127.0.0.1:36321/
export ENEXA_META_DATA_ENDPOINT=http://admin:admin@127.0.0.1:47238/test
URI=$(./enexa-add-file test-result-file)

echo "PREFIX enexa: <http://w3id.org/dice-research/enexa/ontology#> SELECT ?o { <$URI> enexa:location ?o }" |./sparql-select "$ENEXA_META_DATA_ENDPOINT"
#+end_src

#+begin_src shell :results output silent
docker-compose down
#+end_src

** Usage in modules
*** Docker
In Dockerfile:
#+begin_src
FROM <your_application's_docker_image>
COPY --from=enexa-utils:1 / /.
#+end_src

In a module at runtime:
#+begin_src shell
# retrieve parameters
echo $(enexa-parameter "http://example.org/input-parameter-1")
# do useful things
echo your_result >your_output_file
# save result files
enexa-add-file your_output_file "http://example.org/output-parameter-2"
#+end_src

The project documentation can be found [here](https://enexa.eu/documentation). 
For the repository-specific documentation, visit [this link](https://enexa.eu/documentation/enexa-utils.html).


** Examples
- [[https://github.com/EnexaProject/enexa-example-module][a simple example module]]
- [[https://github.com/EnexaProject/enexa-dice-embeddings][DICE Embeddings]]
